{"ast":null,"code":"import _objectSpread from \"G:/studentPortal Fyp/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\n\nvar _jsxFileName = \"G:\\\\studentPortal Fyp\\\\src\\\\layouts\\\\Admin.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\n/*!\n\n=========================================================\n* Argon Dashboard React - v1.2.1\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport { useLocation, Route, Switch, Redirect } from \"react-router-dom\"; // reactstrap components\n// core components\n\nimport AdminNavbar from \"components/Navbars/AdminNavbar.js\";\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\nimport routes from \"routes.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar Admin = function Admin(props) {\n  _s();\n\n  var mainContent = React.useRef(null);\n  var location = useLocation();\n  React.useEffect(function () {\n    document.documentElement.scrollTop = 0;\n    document.scrollingElement.scrollTop = 0;\n    mainContent.current.scrollTop = 0;\n  }, [location]);\n\n  var getRoutes = function getRoutes(routes) {\n    return routes.map(function (prop, key) {\n      if (prop.layout === \"/admin\") {\n        return /*#__PURE__*/_jsxDEV(Route, {\n          path: prop.layout + prop.path,\n          component: prop.component\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, _this);\n      } else {\n        return null;\n      }\n    });\n  };\n\n  var getBrandText = function getBrandText(path) {\n    for (var i = 0; i < routes.length; i++) {\n      if (props.location.pathname.indexOf(routes[i].layout + routes[i].path) !== -1) {\n        return routes[i].name;\n      }\n    }\n\n    return \"Brand\";\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, _objectSpread(_objectSpread({}, props), {}, {\n      routes: routes,\n      logo: {\n        innerLink: \"/admin/index\",\n        imgSrc: require(\"../assets/img/brand/argon-react.png\").default,\n        imgAlt: \"...\"\n      }\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      ref: mainContent,\n      children: [/*#__PURE__*/_jsxDEV(AdminNavbar, _objectSpread(_objectSpread({}, props), {}, {\n        brandText: getBrandText(props.location.pathname)\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [getRoutes(routes), /*#__PURE__*/_jsxDEV(Redirect, {\n          from: \"*\",\n          to: \"/admin/index\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(Admin, \"PMfNpnVkIm3duHCGVFaoP5mp01Q=\", false, function () {\n  return [useLocation];\n});\n\n_c = Admin;\nexport default Admin;\n\nvar _c;\n\n$RefreshReg$(_c, \"Admin\");","map":{"version":3,"sources":["G:/studentPortal Fyp/src/layouts/Admin.js"],"names":["React","useLocation","Route","Switch","Redirect","AdminNavbar","Sidebar","routes","Admin","props","mainContent","useRef","location","useEffect","document","documentElement","scrollTop","scrollingElement","current","getRoutes","map","prop","key","layout","path","component","getBrandText","i","length","pathname","indexOf","name","innerLink","imgSrc","require","default","imgAlt"],"mappings":"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","sourcesContent":["/*!\n\n=========================================================\n* Argon Dashboard React - v1.2.1\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport { useLocation, Route, Switch, Redirect } from \"react-router-dom\";\n// reactstrap components\n// core components\nimport AdminNavbar from \"components/Navbars/AdminNavbar.js\";\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\n\nimport routes from \"routes.js\";\n\nconst Admin = (props) => {\n  const mainContent = React.useRef(null);\n  const location = useLocation();\n\n  React.useEffect(() => {\n    document.documentElement.scrollTop = 0;\n    document.scrollingElement.scrollTop = 0;\n    mainContent.current.scrollTop = 0;\n  }, [location]);\n\n  const getRoutes = (routes) => {\n    return routes.map((prop, key) => {\n      if (prop.layout === \"/admin\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n\n  const getBrandText = (path) => {\n    for (let i = 0; i < routes.length; i++) {\n      if (\n        props.location.pathname.indexOf(routes[i].layout + routes[i].path) !==\n        -1\n      ) {\n        return routes[i].name;\n      }\n    }\n    return \"Brand\";\n  };\n\n  return (\n    <>\n      <Sidebar\n        {...props}\n        routes={routes}\n        logo={{\n          innerLink: \"/admin/index\",\n          imgSrc: require(\"../assets/img/brand/argon-react.png\").default,\n          imgAlt: \"...\",\n        }}\n      />\n      <div className=\"main-content\" ref={mainContent}>\n        <AdminNavbar\n          {...props}\n          brandText={getBrandText(props.location.pathname)}\n        />\n        <Switch>\n          {getRoutes(routes)}\n          <Redirect from=\"*\" to=\"/admin/index\" />\n        </Switch>\n      </div>\n    </>\n  );\n};\n\nexport default Admin;\n"]},"metadata":{},"sourceType":"module"}